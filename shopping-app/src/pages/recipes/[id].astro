---
import Recipe from "../../components/Recipe";

interface Props {
  recipes: { id: string }[];
}

export const prerender = true;

export const getRecipes = async () => {
  const RECIPES_API_URL = import.meta.env.RECIPES_API_URL;
  const recipesJSON = await fetch(`${RECIPES_API_URL}/api/recipes`);
  if (recipesJSON.status === 200) {
    return recipesJSON.json();
  }
  return false;
};

export async function getStaticPaths() {
  const recipes = await getRecipes();
  if (recipes) {
    return recipes.map((recipe: any) => {
      return {
        params: { id: recipe.id },
        props: { recipes },
      };
    });
  }
  return [];
}

const { id } = Astro.params;
const { recipes } = Astro.props;

let currentRecipe;
if (recipes) {
  currentRecipe = recipes.find((recipe) => recipe.id == id);
}
---

{
  currentRecipe && currentRecipe.id ? (
    <div>
      <Recipe recipe={currentRecipe} />
    </div>
  ) : (
    ""
  )
}
