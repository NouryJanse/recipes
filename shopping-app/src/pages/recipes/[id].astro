---
import Recipe from "../../components/Recipe";

interface Props {
  recipes: { id: string }[];
}

export async function getStaticPaths() {
  let recipes = [];
  try {
    const RECIPES_API_URL = import.meta.env.RECIPES_API_URL;
    if (RECIPES_API_URL) {
      const recipesJSON = await fetch(`${RECIPES_API_URL}/api/recipes`);
      if (recipesJSON.status === 200) {
        recipes = await recipesJSON.json();
      }
    }
  } catch (error) {
    console.error(error);
  }

  const paths = recipes.map((recipe: any) => {
    return {
      params: { id: recipe.id },
      props: { recipes },
    };
  });
  return paths;
}

const { id } = Astro.params;
const { recipes } = Astro.props;
const currentRecipe = recipes.find((recipe) => recipe.id == id);
---

<Recipe recipe={currentRecipe} />
